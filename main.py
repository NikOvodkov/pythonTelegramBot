import telebot
import requests
import config
import random
from telebot import types

bot = telebot.TeleBot(config.telegram_server_key, parse_mode=None)  # for SERVER


# bot = telebot.TeleBot(config.telegram_pc_key, parse_mode=None)  # for PC


def what_weather(city):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ø–æ–Ω–∏–º –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –µ–≥–æ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç—è—Ö –≤ –≥—Ä–∞–¥—É—Å–∞—Ö —Ü–µ–ª—å—Å–∏—è.
    –¢–æ–ø–æ–Ω–∏–º –º–æ–∂–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å—Å—è –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ, –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º. –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ - "–≥–æ—Ä–æ–¥, —Å—Ç—Ä–∞–Ω–∞",
    –Ω–∞–ø—Ä–∏–º–µ—Ä "Paris, France". –ß–µ–º —Ç–æ—á–Ω–µ–µ —É–∫–∞–∑–∞–Ω —Ç–æ–ø–æ–Ω–∏–º, —Ç–µ–º –≤–µ—Ä–æ—è—Ç–Ω–µ–µ –µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ.
    –ü—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–∏ —Ç–æ–ø–æ–Ω–∏–º–∞, –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ, –ª–∏–±–æ 0.
    –ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø–æ–≥–æ–¥—ã –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–∫–∞—Ö –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω 0."""

    url = f'http://wttr.in/{city}'
    weather_parameters = {
        'format': "%t",
        'm': ''
    }
    try:
        response = requests.get(url, params=weather_parameters)
    except requests.ConnectionError:
        return 0
    if response.status_code == 200:
        return int(response.text.strip()[0:-2])
    else:
        return 0


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('panda.jfif', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")

    markup.add(item1, item2)

    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n"
                     "–Ø - <b>{1.first_name}</b>, –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º –ª—é–¥—è–º "
                     "–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∑–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏.\n"
                     "–ü–æ–∫–∞ —è —É–º–µ—é –¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é. "
                     "–ß—Ç–æ–±—ã –µ—ë –ø–æ–ª—É—á–∏—Ç—å, –Ω–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è.".format(message.from_user,
                                                                                        bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def send_echo(message):
    if message.chat.type == 'private':
        if message.text == '‚ùì –ü–æ–º–æ—â—å':
            bot.send_message(message.chat.id,
                             "–ï—Å–ª–∏ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ "
                             "—Å–ª–æ–≤–æ '–û—à–∏–±–∫–∞', –¥–≤–æ–µ—Ç–æ—á–∏–µ, –∞ –∑–∞—Ç–µ–º –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
                             "–û—à–∏–±–∫–∞: –∑–∞—Ü–∏–∫–ª–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ\n"
                             "–ö —Å–æ–æ–±—â–µ–Ω–∏—é –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞ —Å –æ—à–∏–±–∫–æ–π!")
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        else:
            temp = what_weather(message.text)
            answer = '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –≤ —Ç–≤–æ—ë–º –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å –ø—Ä–∏–º–µ—Ä–Ω–æ ' + str(temp) + '\n\n'
            if temp < -20:
                answer += '–≠—Ç–æ –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ.\n'
                answer += '–£–≤–µ–ª–∏—á—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –¥–Ω–µ–≤–Ω–æ–≥–æ —Ä–∞—Ü–∏–æ–Ω–∞ –Ω–∞ 5% –∑–∞ –∫–∞–∂–¥—ã–π —á–∞—Å, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã–π –Ω–∞ —É–ª–∏—Ü–µ (10 —á–∞—Å–æ–≤ –≤ —Å—É—Ç–∫–∏ - –ø–ª—é—Å 50%).'
            elif temp < 0:
                answer += '–≠—Ç–æ —Ö–æ–ª–æ–¥–Ω–æ.\n'
                answer += '–£–≤–µ–ª–∏—á—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –¥–Ω–µ–≤–Ω–æ–≥–æ —Ä–∞—Ü–∏–æ–Ω–∞ –Ω–∞ 2% –∑–∞ –∫–∞–∂–¥—ã–π —á–∞—Å, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã–π –Ω–∞ —É–ª–∏—Ü–µ (10 —á–∞—Å–æ–≤ –≤ —Å—É—Ç–∫–∏ - –ø–ª—é—Å 20%).'
            else:
                answer += '–ü—Ä–∏ —Ç–∞–∫–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –¥–Ω–µ–≤–Ω–æ–≥–æ —Ä–∞—Ü–∏–æ–Ω–∞ –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ.\n'
            bot.send_message(message.chat.id, answer)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
